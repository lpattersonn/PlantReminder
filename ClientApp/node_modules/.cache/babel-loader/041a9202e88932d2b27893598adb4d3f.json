{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/components/Plants.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Plants(props) {\n  _s();\n\n  const {\n    plants,\n    setPlants\n  } = useState([]);\n  const plantList = props.plants.map(plant => {\n    // Todays date\n    const today = new Date();\n    console.log(typeof plant.id); // Date from api\n\n    function toString(watered) {\n      const todaysDate = new Date(watered + \"Z\");\n      return todaysDate.toLocaleString();\n    } // Check if plant is well watered\n\n\n    function wellWatered(waterInterval, lastWatered) {\n      const today = new Date();\n      const todaysDate = new Date(lastWatered + \"Z\");\n      const diffInSec = today.getTime() - todaysDate.getTime();\n      return diffInSec / 1000 > waterInterval;\n    }\n\n    const id = plant.id;\n\n    function plantButton(waterInterval, lastWatered) {\n      if (wellWatered(waterInterval, lastWatered)) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-danger\",\n          onClick: () => props.waterPlant(props.plants, id),\n          children: \"Water Me! \\uD83D\\uDE20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-success\",\n          children: \"I'm Full! \\uD83D\\uDE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this);\n      }\n    } // Table row style\n\n\n    const waterStatus = {\n      paddingBottom: \"30px\",\n      border: \"0.2em solid black\",\n      borderColor: wellWatered(plant.waterInterval, plant.lastWatered) ? \"#E6534E\" : \"#74E64E\"\n    };\n    const waterButtonStatus = {\n      border: \"0.2em solid black\",\n      borderColor: wellWatered(plant.waterInterval, plant.lastWatered) ? \"#E6534E\" : \"#74E64E\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      style: waterStatus,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: plant.img,\n          alt: plant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        style: waterStatus,\n        children: plant.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        style: waterStatus,\n        children: toString(plant.lastWatered)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"waterplants-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-secondary\",\n          children: \"Remove Plant  \\uD83D\\uDE14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"waterplants-button\",\n        style: waterButtonStatus,\n        children: plantButton(plant.waterInterval, plant.lastWatered)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, plant.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Plants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Plant Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Watered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Remove Plant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"waterplants-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            class: \"btn btn-dark\",\n            children: \"Water All Plants  \\uD83D\\uDE0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: plantList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Plants, \"xoPmWw7hdSeNNabY2M/9TLVxvos=\");\n\n_c = Plants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plants\");","map":{"version":3,"sources":["/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/components/Plants.js"],"names":["React","useState","Plants","props","plants","setPlants","plantList","map","plant","today","Date","console","log","id","toString","watered","todaysDate","toLocaleString","wellWatered","waterInterval","lastWatered","diffInSec","getTime","plantButton","waterPlant","waterStatus","paddingBottom","border","borderColor","waterButtonStatus","img","name"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nexport default function Plants(props) {\n\n  const {plants, setPlants} = useState([])\n\n\n  const plantList = props.plants.map((plant) => {\n    // Todays date\n    const today = new Date();\n\n    console.log(typeof plant.id)\n\n    // Date from api\n    function toString(watered) {\n      const todaysDate = new Date(watered + \"Z\");\n      return todaysDate.toLocaleString();\n    }\n\n    // Check if plant is well watered\n    function wellWatered(waterInterval, lastWatered) {\n      const today = new Date();\n      const todaysDate = new Date(lastWatered + \"Z\");\n      const diffInSec = today.getTime() - todaysDate.getTime();\n      return diffInSec / 1000 > waterInterval;\n    }\nconst id = plant.id;\n    function plantButton(waterInterval, lastWatered) {\n      if (wellWatered(waterInterval, lastWatered)) {\n        return (\n          <button type=\"button\" class=\"btn btn-danger\" onClick={() => props.waterPlant(props.plants, id)}>\n            Water Me! 😠\n          </button>\n        );\n      } else {\n        return (\n          <button type=\"button\" class=\"btn btn-success\">\n            I'm Full! 😀\n          </button>\n        );\n      }\n    }\n\n\n    // Table row style\n    const waterStatus = {\n      paddingBottom: \"30px\",\n      border: \"0.2em solid black\",\n      borderColor: wellWatered(plant.waterInterval, plant.lastWatered)\n        ? \"#E6534E\"\n        : \"#74E64E\",\n    };\n\n    const waterButtonStatus = {\n      border: \"0.2em solid black\",\n      borderColor: wellWatered(plant.waterInterval, plant.lastWatered)\n        ? \"#E6534E\"\n        : \"#74E64E\",\n    };\n\n    return (\n      <tr style={waterStatus}  key={plant.id}>\n        <td>\n          <img src={plant.img} alt={plant.name} />\n        </td>\n        <td style={waterStatus}>{plant.name}</td>\n        <td style={waterStatus}>{toString(plant.lastWatered)}</td>\n        <td className=\"waterplants-button\">\n        <button type=\"button\" class=\"btn btn-secondary\">Remove Plant  😔</button>\n        </td>\n        <td className=\"waterplants-button\" style={waterButtonStatus}>\n          {plantButton(plant.waterInterval, plant.lastWatered)}\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Plants</th>\n          <th>Plant Name</th>\n          <th>Last Watered</th>\n          <th>Remove Plant</th>\n          <th className=\"waterplants-button\">\n            <button type=\"button\" class=\"btn btn-dark\">\n              Water All Plants  😍\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>{plantList}</tbody>\n    </table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}