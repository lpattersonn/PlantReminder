{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/components/Plants.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Plants(props) {\n  _s();\n\n  const {\n    plants,\n    setPlants\n  } = useState([]);\n  const plantList = props.plants.map(plant => {\n    // Todays date\n    const today = new Date(); // Date from api\n\n    function toString(watered) {\n      const todaysDate = new Date(watered + \"Z\");\n      return todaysDate.toLocaleString();\n    } // Check if plant is well watered\n\n\n    function wellWatered(waterInterval, lastWatered) {\n      const today = new Date();\n      const todaysDate = new Date(lastWatered + \"Z\");\n      const diffInSec = today.getTime() - todaysDate.getTime();\n      return diffInSec / 1000 > waterInterval;\n    }\n\n    const id = plant.id;\n\n    function plantButton(waterInterval, lastWatered) {\n      if (wellWatered(waterInterval, lastWatered)) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          onClick: () => {\n            props.waterPlant(props.plants, id);\n          },\n          children: \"Water Me! \\uD83D\\uDE20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this);\n      } else {\n        return;\n        $(function () {\n          setTimeout(function () {\n            $(\"ur_element\").show(function () {\n              setTimeout(function () {\n                $(\"ur_element\").hide();\n              }, 10000);\n            });\n          }, 10000);\n        })( /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          onClick: () => {\n            props.waterPlant(props.plants, id);\n          },\n          children: \"I'm Full! \\uD83D\\uDE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this));\n      }\n    } // Table row style\n\n\n    const waterStatus = {\n      paddingBottom: \"30px\",\n      border: \"0.2em solid black\",\n      borderColor: wellWatered(plant.waterInterval, plant.lastWatered) ? \"#E6534E\" : \"#74E64E\"\n    };\n    const waterButtonStatus = {\n      border: \"0.2em solid black\",\n      borderColor: wellWatered(plant.waterInterval, plant.lastWatered) ? \"#E6534E\" : \"#74E64E\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      style: waterStatus,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: plant.img,\n          alt: plant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        style: waterStatus,\n        children: plant.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        style: waterStatus,\n        children: toString(plant.lastWatered)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"waterplants-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          children: \"Remove Plant \\uD83D\\uDE14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"waterplants-button\",\n        style: waterButtonStatus,\n        children: plantButton(plant.waterInterval, plant.lastWatered)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Plants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Plant Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Watered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Remove Plant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"waterplants-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-dark\",\n            onClick: () => {\n              props.waterAllPlants(props.plants);\n            },\n            children: \"Water All Plants \\uD83D\\uDE0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: plantList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Plants, \"sJZJT+/qAi/rtKNVK/RYkuwLm9Q=\");\n\n_c = Plants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plants\");","map":{"version":3,"sources":["/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/components/Plants.js"],"names":["React","useState","Plants","props","plants","setPlants","plantList","map","plant","today","Date","toString","watered","todaysDate","toLocaleString","wellWatered","waterInterval","lastWatered","diffInSec","getTime","id","plantButton","waterPlant","$","setTimeout","show","hide","waterStatus","paddingBottom","border","borderColor","waterButtonStatus","img","name","waterAllPlants"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Plants(props) {\n  const { plants, setPlants } = useState([]);\n\n  const plantList = props.plants.map((plant) => {\n    // Todays date\n    const today = new Date();\n\n    // Date from api\n    function toString(watered) {\n      const todaysDate = new Date(watered + \"Z\");\n      return todaysDate.toLocaleString();\n    }\n\n    // Check if plant is well watered\n    function wellWatered(waterInterval, lastWatered) {\n      const today = new Date();\n      const todaysDate = new Date(lastWatered + \"Z\");\n      const diffInSec = today.getTime() - todaysDate.getTime();\n      return diffInSec / 1000 > waterInterval;\n    }\n\n    const id = plant.id;\n\n    function plantButton(waterInterval, lastWatered) {\n      if (wellWatered(waterInterval, lastWatered)) {\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={() => {\n              props.waterPlant(props.plants, id);\n            }}\n          >\n            Water Me! 😠\n          </button>\n        );\n      } else {\n        return;\n\n        $(function () {\n          setTimeout(function () {\n            $(\"ur_element\").show(function () {\n              setTimeout(function () {\n                $(\"ur_element\").hide();\n              }, 10000);\n            });\n          }, 10000);\n        })(\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            onClick={() => {\n              props.waterPlant(props.plants, id);\n            }}\n          >\n            I'm Full! 😀\n          </button>\n        );\n      }\n    }\n\n    // Table row style\n    const waterStatus = {\n      paddingBottom: \"30px\",\n      border: \"0.2em solid black\",\n      borderColor: wellWatered(plant.waterInterval, plant.lastWatered)\n        ? \"#E6534E\"\n        : \"#74E64E\",\n    };\n\n    const waterButtonStatus = {\n      border: \"0.2em solid black\",\n      borderColor: wellWatered(plant.waterInterval, plant.lastWatered)\n        ? \"#E6534E\"\n        : \"#74E64E\",\n    };\n\n    return (\n      <tr style={waterStatus}>\n        <td>\n          <img src={plant.img} alt={plant.name} />\n        </td>\n        <td style={waterStatus}>{plant.name}</td>\n        <td style={waterStatus}>{toString(plant.lastWatered)}</td>\n        <td className=\"waterplants-button\">\n          <button type=\"button\" className=\"btn btn-secondary\">\n            Remove Plant 😔\n          </button>\n        </td>\n        <td className=\"waterplants-button\" style={waterButtonStatus}>\n          {plantButton(plant.waterInterval, plant.lastWatered)}\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Plants</th>\n          <th>Plant Name</th>\n          <th>Last Watered</th>\n          <th>Remove Plant</th>\n          <th className=\"waterplants-button\">\n            <button\n              type=\"button\"\n              className=\"btn btn-dark\"\n              onClick={() => {\n                props.waterAllPlants(props.plants);\n              }}\n            >\n              Water All Plants 😍\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>{plantList}</tbody>\n    </table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}