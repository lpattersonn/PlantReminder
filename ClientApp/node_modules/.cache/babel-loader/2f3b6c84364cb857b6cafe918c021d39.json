{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/components/Plants.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Plants(props) {\n  const plantList = props.plants.map(plant => {\n    // Todays date\n    const today = new Date(); // Plant index\n    // const plantIndex = props.plants.findIndex((thisPlant) => {\n    //   thisPlant.id === plant.id;\n    // });\n\n    const index = id => {\n      for (let i = 0; i < props.plants.length; i++) {\n        if (id === props.pants[i]) {\n          console.log(i);\n          return i;\n        }\n      }\n    };\n\n    console.log(index); // Date from api\n\n    function toString(watered) {\n      const todaysDate = new Date(watered + \"Z\");\n      return todaysDate.toLocaleString();\n    } // Check if plant is well watered\n\n\n    function wellWatered(waterInterval, lastWatered) {\n      const today = new Date();\n      const todaysDate = new Date(lastWatered + \"Z\");\n      const diffInSec = today.getTime() - todaysDate.getTime();\n      return diffInSec / 1000 > waterInterval;\n    }\n\n    const id = plant.id;\n\n    function plantButton(waterInterval, lastWatered) {\n      const today = new Date();\n      const todaysDate = new Date(lastWatered + \"Z\");\n      const diffInWater = today.getTime() - todaysDate.getTime();\n\n      if (diffInWater > 30000 && diffInWater < waterInterval) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-warning\",\n          onClick: () => {\n            props.waterPlant(props.plants, id);\n          },\n          children: \"Thirsty \\uD83E\\uDD14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this);\n      } else if (wellWatered(waterInterval, lastWatered)) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          onClick: () => {\n            props.waterPlant(props.plants, id);\n          },\n          children: \"Water Me! \\uD83D\\uDE20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          onClick: () => {\n            props.waterPlant(props.plants, id);\n          },\n          children: \"I'm Full! \\uD83D\\uDE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    function warningButton(waterInterval, lastWatered) {\n      const today = new Date();\n      const todaysDate = new Date(lastWatered + \"Z\");\n      const diffInWater = today.getTime() - todaysDate.getTime();\n\n      if (diffInWater > 30000 && diffInWater < waterInterval) {\n        return \"#E6D54E\";\n      } else {\n        return \"#74E64E\";\n      }\n    } // Table row style\n\n\n    const waterStatus = {\n      paddingBottom: \"30px\",\n      border: \"0.2em solid black\",\n      borderColor: wellWatered(plant.waterInterval, plant.lastWatered) ? \"#E6534E\" : warningButton(plant.waterInterval, plant.lastWatered)\n    };\n    const waterButtonStatus = {\n      border: \"0.2em solid black\",\n      borderColor: wellWatered(plant.waterInterval, plant.lastWatered) ? \"#E6534E\" : warningButton(plant.waterInterval, plant.lastWatered)\n    };\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      style: waterStatus,\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: plant.img,\n          alt: plant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        style: waterStatus,\n        children: plant.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        style: waterStatus,\n        children: toString(plant.lastWatered)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"waterplants-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => {\n            props.deletePlant(index(plant.id));\n          },\n          children: \"Remove Plant \\uD83D\\uDE14\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"waterplants-button\",\n        style: waterButtonStatus,\n        children: plantButton(plant.waterInterval, plant.lastWatered)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Plants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Plant Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Watered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Remove Plant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"waterplants-button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-dark\",\n            onClick: () => {\n              props.waterAllPlants(props.plants);\n            },\n            children: \"Water All Plants \\uD83D\\uDE0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: plantList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_c = Plants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plants\");","map":{"version":3,"sources":["/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/components/Plants.js"],"names":["React","Plants","props","plantList","plants","map","plant","today","Date","index","id","i","length","pants","console","log","toString","watered","todaysDate","toLocaleString","wellWatered","waterInterval","lastWatered","diffInSec","getTime","plantButton","diffInWater","waterPlant","warningButton","waterStatus","paddingBottom","border","borderColor","waterButtonStatus","img","name","deletePlant","waterAllPlants"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nexport default function Plants(props) {\n  const plantList = props.plants.map((plant) => {\n    // Todays date\n    const today = new Date();\n\n    // Plant index\n    // const plantIndex = props.plants.findIndex((thisPlant) => {\n    //   thisPlant.id === plant.id;\n    // });\n\n    const index = (id) => {\n      for (let i = 0; i < props.plants.length; i++) {\n        if (id === props.pants[i]) {\n          console.log(i);\n          return i;\n        }\n      }\n    };\n\n    console.log(index);\n    // Date from api\n    function toString(watered) {\n      const todaysDate = new Date(watered + \"Z\");\n      return todaysDate.toLocaleString();\n    }\n\n    // Check if plant is well watered\n    function wellWatered(waterInterval, lastWatered) {\n      const today = new Date();\n      const todaysDate = new Date(lastWatered + \"Z\");\n      const diffInSec = today.getTime() - todaysDate.getTime();\n      return diffInSec / 1000 > waterInterval;\n    }\n\n    const id = plant.id;\n\n    function plantButton(waterInterval, lastWatered) {\n      const today = new Date();\n      const todaysDate = new Date(lastWatered + \"Z\");\n      const diffInWater = today.getTime() - todaysDate.getTime();\n\n      if (diffInWater > 30000 && diffInWater < waterInterval) {\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-warning\"\n            onClick={() => {\n              props.waterPlant(props.plants, id);\n            }}\n          >\n            Thirsty 🤔\n          </button>\n        );\n      } else if (wellWatered(waterInterval, lastWatered)) {\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={() => {\n              props.waterPlant(props.plants, id);\n            }}\n          >\n            Water Me! 😠\n          </button>\n        );\n      } else {\n        return (\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            onClick={() => {\n              props.waterPlant(props.plants, id);\n            }}\n          >\n            I'm Full! 😀\n          </button>\n        );\n      }\n    }\n\n    function warningButton(waterInterval, lastWatered) {\n      const today = new Date();\n      const todaysDate = new Date(lastWatered + \"Z\");\n      const diffInWater = today.getTime() - todaysDate.getTime();\n      if (diffInWater > 30000 && diffInWater < waterInterval) {\n        return \"#E6D54E\";\n      } else {\n        return \"#74E64E\";\n      }\n    }\n\n    // Table row style\n    const waterStatus = {\n      paddingBottom: \"30px\",\n      border: \"0.2em solid black\",\n      borderColor: wellWatered(plant.waterInterval, plant.lastWatered)\n        ? \"#E6534E\"\n        : warningButton(plant.waterInterval, plant.lastWatered),\n    };\n\n    const waterButtonStatus = {\n      border: \"0.2em solid black\",\n      borderColor: wellWatered(plant.waterInterval, plant.lastWatered)\n        ? \"#E6534E\"\n        : warningButton(plant.waterInterval, plant.lastWatered),\n    };\n\n    return (\n      <tr style={waterStatus}>\n        <td>\n          <img src={plant.img} alt={plant.name} />\n        </td>\n        <td style={waterStatus}>{plant.name}</td>\n        <td style={waterStatus}>{toString(plant.lastWatered)}</td>\n        <td className=\"waterplants-button\">\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary\"\n            onClick={() => {\n              props.deletePlant(index(plant.id));\n            }}\n          >\n            Remove Plant 😔\n          </button>\n        </td>\n        <td className=\"waterplants-button\" style={waterButtonStatus}>\n          {plantButton(plant.waterInterval, plant.lastWatered)}\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Plants</th>\n          <th>Plant Name</th>\n          <th>Last Watered</th>\n          <th>Remove Plant</th>\n          <th className=\"waterplants-button\">\n            <button\n              type=\"button\"\n              className=\"btn btn-dark\"\n              onClick={() => {\n                props.waterAllPlants(props.plants);\n              }}\n            >\n              Water All Plants 😍\n            </button>\n          </th>\n        </tr>\n      </thead>\n      <tbody>{plantList}</tbody>\n    </table>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}