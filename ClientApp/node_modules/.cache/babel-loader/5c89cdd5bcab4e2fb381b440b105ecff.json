{"ast":null,"code":"var _jsxFileName = \"/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/App.js\",\n    _s = $RefreshSig$();\n\n// Imports\nimport React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router\";\nimport Header from \"./components/Header.js\";\nimport Plants from \"./components/Plants.js\";\nimport Form from \"./components/Form.js\";\nimport axios from \"axios\";\nimport \"./custom.css\";\nimport { getAllPlants } from \"./helper/helper.js\"; // App\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [plants, setPlants] = useState([]);\n  useEffect(() => {\n    axios.get(\"/api/plants\").then(res => {\n      setPlants(res.data);\n    });\n    return () => {\n      \"Searching\";\n    };\n  }, []); // Delete plant\n  // Plant button\n\n  const waterPlant = function (plants, id) {\n    const day = new Date();\n    const dayAndTimeNow = day.getTime();\n    const prevDate = plants.waterInterval;\n    console.log(prevDate, \"This ONE\"); // Find plant\n\n    const updatedPlant = { ...plants.find(plant => plant.id === id)\n    };\n    const updatedIndex = plants.findIndex(plant => plant.id === id); // Get Plant last watered\n\n    const plantLastWatered = new Date(updatedPlant.lastWatered + \"Z\").getTime(); // Find water interval from last watered\n\n    if (dayAndTimeNow - plantLastWatered > 30000) {\n      updatedPlant.lastWatered = day.toISOString().split(\"Z\")[0];\n      plants[updatedIndex] = updatedPlant;\n      setPlants([...plants]);\n    }\n  }; // Water all plants\n\n\n  const waterAllPlants = function (plants) {\n    const waterPlants = plants.map(plant => {\n      const id = plant.id;\n      return waterPlant(plants, id);\n    });\n  }; // Delete plant\n\n\n  const deletePlant = function (id) {\n    if (window.confirm(\"Are you sure you want to delete this plant?\")) {\n      axios.delete(`/api/plants/${id}.json`).then(res => {\n        console.log(res.body);\n        setPlants([...plants]);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"nav\",\n      children: /*#__PURE__*/_jsxDEV(Header, {}, 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"formSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add Plant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        plants: plants,\n        setPlants: setPlants\n      }, 2, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"plantTable\",\n      children: /*#__PURE__*/_jsxDEV(Plants, {\n        plants: plants,\n        waterPlant: waterPlant,\n        waterAllPlants: waterAllPlants,\n        deletePlant: deletePlant\n      }, 3, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gLr7j+f/M9K8FSUeLTOcFFeB2DY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/App.js"],"names":["React","useState","useEffect","Route","Header","Plants","Form","axios","getAllPlants","App","plants","setPlants","get","then","res","data","waterPlant","id","day","Date","dayAndTimeNow","getTime","prevDate","waterInterval","console","log","updatedPlant","find","plant","updatedIndex","findIndex","plantLastWatered","lastWatered","toISOString","split","waterAllPlants","waterPlants","map","deletePlant","window","confirm","delete","body"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;AACA,SAASC,YAAT,QAA6B,oBAA7B,C,CAEA;;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAACK,GAAN,CAAU,aAAV,EAAyBC,IAAzB,CAA+BC,GAAD,IAAS;AACrCH,MAAAA,SAAS,CAACG,GAAG,CAACC,IAAL,CAAT;AACD,KAFD;AAGA,WAAO,MAAM;AACX;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT,CAH4B,CAY5B;AAEA;;AAEA,QAAMC,UAAU,GAAG,UAAUN,MAAV,EAAkBO,EAAlB,EAAsB;AAGzC,UAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,UAAMC,aAAa,GAAGF,GAAG,CAACG,OAAJ,EAAtB;AACA,UAAMC,QAAQ,GAAGZ,MAAM,CAACa,aAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsB,UAAtB,EANyC,CAOzC;;AACA,UAAMI,YAAY,GAAG,EAAE,GAAGhB,MAAM,CAACiB,IAAP,CAAaC,KAAD,IAAWA,KAAK,CAACX,EAAN,KAAaA,EAApC;AAAL,KAArB;AACA,UAAMY,YAAY,GAAGnB,MAAM,CAACoB,SAAP,CAAkBF,KAAD,IAAWA,KAAK,CAACX,EAAN,KAAaA,EAAzC,CAArB,CATyC,CAUzC;;AACA,UAAMc,gBAAgB,GAAG,IAAIZ,IAAJ,CAASO,YAAY,CAACM,WAAb,GAA2B,GAApC,EAAyCX,OAAzC,EAAzB,CAXyC,CAYzC;;AACA,QAAKD,aAAa,GAAGW,gBAAjB,GAAqC,KAAzC,EAAgD;AAC9CL,MAAAA,YAAY,CAACM,WAAb,GAA2Bd,GAAG,CAACe,WAAJ,GAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAA3B;AACAxB,MAAAA,MAAM,CAACmB,YAAD,CAAN,GAAuBH,YAAvB;AACAf,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,CAAD,CAAT;AACD;AACF,GAlBC,CAhB4B,CAoC5B;;;AACA,QAAMyB,cAAc,GAAG,UAAUzB,MAAV,EAAkB;AACvC,UAAM0B,WAAW,GAAG1B,MAAM,CAAC2B,GAAP,CAAYT,KAAD,IAAW;AACxC,YAAMX,EAAE,GAAGW,KAAK,CAACX,EAAjB;AACA,aAAOD,UAAU,CAACN,MAAD,EAASO,EAAT,CAAjB;AACD,KAHmB,CAApB;AAID,GALD,CArC4B,CA4C5B;;;AACA,QAAMqB,WAAW,GAAG,UAAUrB,EAAV,EAAc;AAChC,QAAIsB,MAAM,CAACC,OAAP,CAAe,6CAAf,CAAJ,EAAmE;AACjEjC,MAAAA,KAAK,CAACkC,MAAN,CAAc,eAAcxB,EAAG,OAA/B,EAAuCJ,IAAvC,CAA6CC,GAAD,IAAS;AACnDU,QAAAA,OAAO,CAACC,GAAR,CAAYX,GAAG,CAAC4B,IAAhB;AACA/B,QAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,CAAD,CAAT;AACD,OAHD;AAID;AACF,GAPD;;AASA,sBACE;AAAA,4BACE;AAAS,MAAA,SAAS,EAAC,KAAnB;AAAA,6BACE,QAAC,MAAD,MAAa,CAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAc,QAAA,MAAM,EAAEA,MAAtB;AAA8B,QAAA,SAAS,EAAEC;AAAzC,SAAW,CAAX;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAQE;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,6BACE,QAAC,MAAD;AAEE,QAAA,MAAM,EAAED,MAFV;AAGE,QAAA,UAAU,EAAEM,UAHd;AAIE,QAAA,cAAc,EAAEmB,cAJlB;AAKE,QAAA,WAAW,EAAEG;AALf,SACO,CADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA1EuB7B,G;;KAAAA,G","sourcesContent":["// Imports\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport Header from \"./components/Header.js\";\r\nimport Plants from \"./components/Plants.js\";\r\nimport Form from \"./components/Form.js\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./custom.css\";\r\nimport { getAllPlants } from \"./helper/helper.js\";\r\n\r\n// App\r\nexport default function App() {\r\n  const [plants, setPlants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/plants\").then((res) => {\r\n      setPlants(res.data);\r\n    });\r\n    return () => {\r\n      \"Searching\";\r\n    };\r\n  }, []);\r\n\r\n  // Delete plant\r\n\r\n  // Plant button\r\n  \r\n  const waterPlant = function (plants, id) {\r\n    \r\n\r\n  const day = new Date();\r\n  const dayAndTimeNow = day.getTime();\r\n  const prevDate = plants.waterInterval;\r\n  console.log(prevDate, \"This ONE\");\r\n  // Find plant\r\n  const updatedPlant = { ...plants.find((plant) => plant.id === id) };\r\n  const updatedIndex = plants.findIndex((plant) => plant.id === id);\r\n  // Get Plant last watered\r\n  const plantLastWatered = new Date(updatedPlant.lastWatered + \"Z\").getTime();\r\n  // Find water interval from last watered\r\n  if ((dayAndTimeNow - plantLastWatered) > 30000) {\r\n    updatedPlant.lastWatered = day.toISOString().split(\"Z\")[0];\r\n    plants[updatedIndex] = updatedPlant;\r\n    setPlants([...plants]);\r\n  }\r\n}\r\n\r\n  // Water all plants\r\n  const waterAllPlants = function (plants) {\r\n    const waterPlants = plants.map((plant) => {\r\n      const id = plant.id;\r\n      return waterPlant(plants, id);\r\n    });\r\n  };\r\n\r\n  // Delete plant\r\n  const deletePlant = function (id) {\r\n    if (window.confirm(\"Are you sure you want to delete this plant?\")) {\r\n      axios.delete(`/api/plants/${id}.json`).then((res) => {\r\n        console.log(res.body);\r\n        setPlants([...plants]);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"nav\">\r\n        <Header key={1} />\r\n      </section>\r\n      <section className=\"formSection\">\r\n        <h4>Add Plant</h4>\r\n        <Form key={2} plants={plants} setPlants={setPlants} />\r\n      </section>\r\n      <section className=\"plantTable\">\r\n        <Plants\r\n          key={3}\r\n          plants={plants}\r\n          waterPlant={waterPlant}\r\n          waterAllPlants={waterAllPlants}\r\n          deletePlant={deletePlant}\r\n        />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}