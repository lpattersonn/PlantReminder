[{"/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/index.js":"1","/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/App.js":"2","/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/registerServiceWorker.js":"3","/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/components/Header.js":"4","/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/components/Plants.js":"5","/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/helper/helper.js":"6","/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/components/Form.js":"7"},{"size":521,"mtime":1644637719507,"results":"8","hashOfConfig":"9"},{"size":2681,"mtime":1645101401038,"results":"10","hashOfConfig":"9"},{"size":4121,"mtime":1644637719510,"results":"11","hashOfConfig":"9"},{"size":132,"mtime":1644679511679,"results":"12","hashOfConfig":"9"},{"size":4189,"mtime":1645102146495,"results":"13","hashOfConfig":"9"},{"size":177,"mtime":1644948561012,"results":"14","hashOfConfig":"9"},{"size":1858,"mtime":1644948560838,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1hqqc1h",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":1,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/index.js",[],["32","33","34"],"/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/App.js",["35","36","37"],"// Imports\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Route } from \"react-router\";\r\nimport Header from \"./components/Header.js\";\r\nimport Plants from \"./components/Plants.js\";\r\nimport Form from \"./components/Form.js\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./custom.css\";\r\nimport { getAllPlants } from \"./helper/helper.js\";\r\n\r\n// App\r\nexport default function App() {\r\n  const [plants, setPlants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/plants\").then((res) => {\r\n      setPlants(res.data);\r\n    });\r\n    return () => {\r\n      \"Searching\";\r\n    };\r\n  }, []);\r\n\r\n  // Delete plant\r\n\r\n  // Plant button\r\n\r\n  const waterPlant = function (plants, id) {\r\n    const day = new Date();\r\n    const dayAndTimeNow = day.getTime();\r\n\r\n    // Find plant\r\n    const updatedPlant = { ...plants.find((plant) => plant.id === id) };\r\n    const updatedIndex = plants.findIndex((plant) => plant.id === id);\r\n\r\n    // Get Plant last watered\r\n    const plantLastWatered = new Date(updatedPlant.lastWatered + \"Z\").getTime();\r\n\r\n    // Find water interval from last watered\r\n    if (dayAndTimeNow - plantLastWatered > 30000) {\r\n      updatedPlant.lastWatered = day.toISOString().split(\"Z\")[0];\r\n      plants[updatedIndex] = updatedPlant;\r\n      setPlants([...plants]);\r\n    } else {\r\n      window.confirm(\r\n        `${updatedPlant.name} is well watered, please wait 30 seconds.`\r\n      );\r\n    }\r\n  };\r\n\r\n  // Water all plants\r\n  const waterAllPlants = function (plants) {\r\n    const waterPlants = plants.map((plant) => {\r\n      const id = plant.id;\r\n      return waterPlant(plants, id);\r\n    });\r\n  };\r\n\r\n  // Delete plant\r\n  const deletePlant = function (id) {\r\n    if (window.confirm(\"Are you sure you want to delete this plant?\")) {\r\n      axios\r\n        .delete(`/api/plants/${id}`)\r\n        .then((res) => {\r\n          return axios.get(\"/api/plants\");\r\n        })\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          setPlants(res.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"nav\">\r\n        <Header />\r\n      </section>\r\n      <div id=\"body\">\r\n        <section className=\"formSection\">\r\n          <div className=\"formLabel\">\r\n            <h4>Add Plant</h4>\r\n            <Form plants={plants} setPlants={setPlants} />\r\n          </div>\r\n        </section>\r\n        <section className=\"plantTable\">\r\n          <Plants\r\n            key={plants.length}\r\n            plants={plants}\r\n            setPlants={setPlants}\r\n            waterPlant={waterPlant}\r\n            waterAllPlants={waterAllPlants}\r\n            deletePlant={deletePlant}\r\n          />\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/registerServiceWorker.js",[],"/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/components/Header.js",[],"/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/components/Plants.js",["38","39","40","41","42","43","44","45"],"/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/helper/helper.js",[],"/Users/macintoshssd/lighthouse/PlantReminder/ClientApp/src/components/Form.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":15},{"ruleId":"52","severity":1,"message":"56","line":10,"column":10,"nodeType":"54","messageId":"55","endLine":10,"endColumn":22},{"ruleId":"52","severity":1,"message":"57","line":54,"column":11,"nodeType":"54","messageId":"55","endLine":54,"endColumn":22},{"ruleId":"52","severity":1,"message":"58","line":6,"column":11,"nodeType":"54","messageId":"55","endLine":6,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":9,"column":59,"nodeType":"61","messageId":"62","endLine":9,"endColumn":61},{"ruleId":"63","severity":2,"message":"64","line":10,"column":7,"nodeType":"65","messageId":"66","endLine":10,"endColumn":33},{"ruleId":"50","severity":1,"message":"67","line":39,"column":11,"nodeType":"68","endLine":45,"endColumn":12},{"ruleId":"50","severity":1,"message":"67","line":51,"column":11,"nodeType":"68","endLine":57,"endColumn":12},{"ruleId":"50","severity":1,"message":"67","line":63,"column":11,"nodeType":"68","endLine":69,"endColumn":12},{"ruleId":"50","severity":1,"message":"67","line":111,"column":11,"nodeType":"68","endLine":117,"endColumn":12},{"ruleId":"50","severity":1,"message":"67","line":137,"column":13,"nodeType":"68","endLine":143,"endColumn":14},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"jsx-a11y/accessible-emoji",[],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'getAllPlants' is defined but never used.","'waterPlants' is assigned a value but never used.","'today' is assigned a value but never used.","array-callback-return","Array.prototype.findIndex() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","Emojis should be wrapped in <span>, have role=\"img\", and have an accessible description with aria-label or aria-labelledby.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]